define Worm:
    logical topology:
        objects:
            VNode := Node {state = Vulnerable, Vulnerability vulnerability = x}
            INode := VNode {state = Infected}
        cardinality:
            |INode|>=1
            |VNode|>=1
        relationships:
    timeline of events:
        definitions:
            each Inode i, some VNode v:
                e1 := {type = SCAN, origin = i, destination = v, Vulnerability vulnerability = x }
                s1 := {v.state1 = Infected}
        timeline:
            e1  -> if (e1.vulnerability == v.vulnerability) then s1 endif
   invariants: 
   monitoring:
   postExperiment: